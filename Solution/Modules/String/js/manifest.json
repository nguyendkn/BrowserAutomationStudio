{
    "actions": [
		{
            "code": [
                {
                    "file": "is_string_code.js",
                    "name": "is_string_code"
                }
            ],
            "description": {
                "en": "Is string",
                "ru": "Является ли строкой"
            },
            "interface": "is_string_interface.js",
            "is_element": false,
            "name": "is_string",
            "select": "is_string_select.js",
            "template": "{{data}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "is_not_empty_string_code.js",
                    "name": "is_not_empty_string_code"
                }
            ],
            "description": {
                "en": "Is not empty",
                "ru": "Не пустая строка"
            },
            "interface": "is_not_empty_string_interface.js",
            "is_element": false,
            "name": "is_not_empty_string",
            "select": "is_not_empty_string_select.js",
            "template": "{{data}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "to_string_code.js",
                    "name": "to_string_code"
                }
            ],
            "description": {
                "en": "To string",
                "ru": "В строку"
            },
            "interface": "to_string_interface.js",
            "is_element": false,
            "name": "to_string",
            "select": "to_string_select.js",
            "template": "{{data}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "to_number_code.js",
                    "name": "to_number_code"
                }
            ],
            "description": {
                "en": "To number",
                "ru": "В число"
            },
            "interface": "to_number_interface.js",
            "is_element": false,
            "name": "to_number",
            "select": "to_number_select.js",
            "template": "{{string}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "number_format_code.js",
                    "name": "number_format_code"
                }
            ],
            "description": {
                "en": "Format number",
                "ru": "Форматировать число"
            },
            "interface": "number_format_interface.js",
            "is_element": false,
            "name": "number_format",
            "select": "number_format_select.js",
            "template": "{{number}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "count_substrings_code.js",
                    "name": "count_substrings_code"
                }
            ],
            "description": {
                "en": "Count substrings",
                "ru": "Количество подстрок"
            },
            "interface": "count_substrings_interface.js",
            "is_element": false,
            "name": "count_substrings",
            "select": "count_substrings_select.js",
            "template": "{{substring}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "get_substring_code.js",
                    "name": "get_substring_code"
                }
            ],
            "description": {
                "en": "Get substring",
                "ru": "Получить подстроку"
            },
            "interface": "get_substring_interface.js",
            "is_element": false,
            "name": "get_substring",
            "select": "get_substring_select.js",
            "template": "{{from}} : {{to}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "get_substring_between_code.js",
                    "name": "get_substring_between_code"
                }
            ],
            "description": {
                "en": "Get substring between",
                "ru": "Получить подстроку между"
            },
            "interface": "get_substring_between_interface.js",
            "is_element": false,
            "name": "get_substring_between",
            "select": "get_substring_between_select.js",
            "template": "{{left}} : {{right}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "remove_string_part_code.js",
                    "name": "remove_string_part_code"
                }
            ],
            "description": {
                "en": "Remove string part",
                "ru": "Удалить часть строки"
            },
            "interface": "remove_string_part_interface.js",
            "is_element": false,
            "name": "remove_string_part",
            "select": "remove_string_part_select.js",
            "template": "{{from}} * {{count}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "to_lower_case_code.js",
                    "name": "to_lower_case_code"
                }
            ],
            "description": {
                "en": "To lower case",
                "ru": "В нижний регистр"
            },
            "interface": "to_lower_case_interface.js",
            "is_element": false,
            "name": "to_lower_case",
            "select": "to_lower_case_select.js",
            "template": "{{string}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "to_upper_case_code.js",
                    "name": "to_upper_case_code"
                }
            ],
            "description": {
                "en": "To upper case",
                "ru": "В верхний регистр"
            },
            "interface": "to_upper_case_interface.js",
            "is_element": false,
            "name": "to_upper_case",
            "select": "to_upper_case_select.js",
            "template": "{{string}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "string_contains_code.js",
                    "name": "string_contains_code"
                }
            ],
            "description": {
                "en": "Contains",
                "ru": "Содержит"
            },
            "interface": "string_contains_interface.js",
            "is_element": false,
            "name": "string_contains",
            "select": "string_contains_select.js",
            "template": "{{substring}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "string_length_code.js",
                    "name": "string_length_code"
                }
            ],
            "description": {
                "en": "Get length",
                "ru": "Получить длину"
            },
            "interface": "string_length_interface.js",
            "is_element": false,
            "name": "string_length",
            "select": "string_length_select.js",
            "template": "{{string}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "capitalize_words_code.js",
                    "name": "capitalize_words_code"
                }
            ],
            "description": {
                "en": "Capitalize word",
                "ru": "Слово с большой буквы"
            },
            "interface": "capitalize_words_interface.js",
            "is_element": false,
            "name": "capitalize_words",
            "select": "capitalize_words_select.js",
            "template": "{{string}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "count_words_code.js",
                    "name": "count_words_code"
                }
            ],
            "description": {
                "en": "Count words",
                "ru": "Количество слов"
            },
            "interface": "count_words_interface.js",
            "is_element": false,
            "name": "count_words",
            "select": "count_words_select.js",
            "template": "{{string}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "split_to_words_code.js",
                    "name": "split_to_words_code"
                }
            ],
            "description": {
                "en": "Split sentence to words",
                "ru": "Разделить предложение на слова"
            },
            "interface": "split_to_words_interface.js",
            "is_element": false,
            "name": "split_to_words",
            "select": "split_to_words_select.js",
            "template": "{{string}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "split_to_sentences_code.js",
                    "name": "split_to_sentences_code"
                }
            ],
            "description": {
                "en": "Split text to sentences",
                "ru": "Разделить текст на предложения"
            },
            "interface": "split_to_sentences_interface.js",
            "is_element": false,
            "name": "split_to_sentences",
            "select": "split_to_sentences_select.js",
            "template": "{{string}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "find_substring_code.js",
                    "name": "find_substring_code"
                }
            ],
            "description": {
                "en": "Find substring",
                "ru": "Найти подстроку"
            },
            "interface": "find_substring_interface.js",
            "is_element": false,
            "name": "find_substring",
            "select": "find_substring_select.js",
            "template": "{{substring}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "starts_with_code.js",
                    "name": "starts_with_code"
                }
            ],
            "description": {
                "en": "Starts with",
                "ru": "Начинается с"
            },
            "interface": "starts_with_interface.js",
            "is_element": false,
            "name": "starts_with",
            "select": "starts_with_select.js",
            "template": "{{substring}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "ends_with_code.js",
                    "name": "ends_with_code"
                }
            ],
            "description": {
                "en": "Ends with",
                "ru": "Заканчивается на"
            },
            "interface": "ends_with_interface.js",
            "is_element": false,
            "name": "ends_with",
            "select": "ends_with_select.js",
            "template": "{{substring}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "insert_substring_code.js",
                    "name": "insert_substring_code"
                }
            ],
            "description": {
                "en": "Insert at",
                "ru": "Вставить в"
            },
            "interface": "insert_substring_interface.js",
            "is_element": false,
            "name": "insert_substring",
            "select": "insert_substring_select.js",
            "template": "{{substring}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "concat_strings_code.js",
                    "name": "concat_strings_code"
                }
            ],
            "description": {
                "en": "Concatenate strings",
                "ru": "Соединить строки"
            },
            "interface": "concat_strings_interface.js",
            "is_element": false,
            "name": "concat_strings",
            "select": "concat_strings_select.js",
            "template": "{{Save}}"
        },
		{
            "code": [
                {
                    "file": "latinize_code.js",
                    "name": "latinize_code"
                }
            ],
            "description": {
                "en": "Latinize",
                "ru": "Латинизировать"
            },
            "interface": "latinize_interface.js",
            "is_element": false,
            "name": "latinize",
            "select": "latinize_select.js",
            "template": "{{string}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "declination_code.js",
                    "name": "declination_code"
                }
            ],
            "description": {
                "en": "Decline",
                "ru": "Склонять"
            },
            "interface": "declination_interface.js",
            "is_element": false,
            "name": "declination",
            "select": "declination_select.js",
            "template": "{{number}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "parse_csv_string_code.js",
                    "name": "parse_csv_string_code"
                }
            ],
            "description": {
                "en": "Parse CSV string",
                "ru": "Парсить CSV строку"
            },
            "interface": "parse_csv_string_interface.js",
            "is_element": false,
            "name": "parse_csv_string",
            "select": "parse_csv_string_select.js",
            "template": "{{string}} -> {{VariablesList}}"
        },
		{
            "code": [
                {
                    "file": "create_csv_string_code.js",
                    "name": "create_csv_string_code"
                }
            ],
            "description": {
                "en": "Create CSV string",
                "ru": "Создать CSV строку"
            },
            "interface": "create_csv_string_interface.js",
            "is_element": false,
            "name": "create_csv_string",
            "select": "create_csv_string_select.js",
            "template": "{{Save}}"
        },
		{
            "code": [
                {
                    "file": "trim_code.js",
                    "name": "trim_code"
                }
            ],
            "description": {
                "en": "Trim",
                "ru": "Подровнять"
            },
            "interface": "trim_interface.js",
            "is_element": false,
            "name": "trim",
            "select": "trim_select.js",
            "template": "{{string}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "clean_code.js",
                    "name": "clean_code"
                }
            ],
            "description": {
                "en": "Clean",
                "ru": "Очистить"
            },
            "interface": "clean_interface.js",
            "is_element": false,
            "name": "clean",
            "select": "clean_select.js",
            "template": "{{string}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "parseline_code.js",
                    "name": "parseline_code"
                }
            ],
            "description": {
                "en": "Parse line",
                "ru": "Парсить строку"
            },
            "interface": "parseline_interface.js",
            "is_element": false,
            "name": "parseline",
            "select": "parseline_select.js",
            "template": "{{Value}} -> {{VariablesList}}",
			"suggestion":{  
				"en":"split line",
				"ru":"разбить строку, разделить строку"
			}
        },
		{
            "code": [
                {
                    "file": "template_code.js",
                    "name": "template_code"
                }
            ],
            "description": {
                "en": "Template",
                "ru": "Шаблон"
            },
            "interface": "template_interface.js",
            "is_element": false,
            "name": "template",
            "select": "template_select.js",
            "template": "{{Template}} -> {{Save}}",
			"suggestion":{  
				"en":"randomize string, random string, spintax, multiline string",
				"ru":"рандомизировать, случайная строка, спинтакс, многострочная переменная"
			}
        },
		{
            "code": [
                {
                    "file": "replacestring_code.js",
                    "name": "replacestring_code"
                }
            ],
            "description": {
                "en": "Replace string",
                "ru": "Заменить строку"
            },
            "interface": "replacestring_interface.js",
            "is_element": false,
            "name": "replacestring",
            "select": "replacestring_select.js",
            "template": "{{Value}} -> {{Save}}"
        },
		{
            "code": [
                {
                    "file": "randomstring_code.js",
                    "name": "randomstring_code"
                }
            ],
            "description": {
                "en": "Random string",
                "ru": "Случайная строка"
            },
            "interface": "randomstring_interface.js",
            "is_element": false,
            "name": "randomstring",
            "select": "randomstring_select.js",
            "template": "{{Save}}"
        }
    ],
    "api_version": 1,
    "autogenerated_functions": [
        "is_string",
		"is_not_empty_string",
		"to_string",
		"to_number",
		"number_format",
		"count_substrings",
		"get_substring",
		"get_substring_between",
		"remove_string_part",
		"to_lower_case",
		"to_upper_case",
		"string_contains",
		"string_length",
		"capitalize_words",
		"count_words",
		"split_to_words",
		"split_to_sentences",
		"find_substring",
		"starts_with",
		"ends_with",
		"insert_substring",
		"concat_strings",
		"latinize",
		"declination",
		"parse_csv_string",
		"create_csv_string",
		"trim",
		"clean"
	],
    "browser": [
    ],
    "depends": [
    ],
    "description": "Module for working with strings",
    "description_small": {
        "en": "String",
        "ru": "Строка"
    },
    "developer_email": "sasha9817@mail.ru",
    "developer_name": "GhostZ",
    "developer_site": "https://t.me/GhostZed",
    "embeddeddata": [],
    "engine": [
        "engine.js"
    ],
    "icon": "string.png",
    "info": {
        "en": "Module for working with strings.",
        "ru": "Модуль для работы со строками."
    },
    "is_autogenerated": true,
    "languages": [],
    "localize": {
		"Data": {"ru":"Данные"},
		"String": {"ru":"Строка"},
		"Not string": {"ru":"Не строка"},
		"Just sample text": {"ru":"Просто пример текста"},
		"Optional parameter.": {"ru":"Необязательный параметр."},
		"The data is a string.": {"ru":"Данные являются строкой."},
		"The data is not a string.": {"ru":"Данные не являются строкой."},
		"Check if the specified data is a string.": {"ru":"Проверить, являются ли указанные данные строкой."},
		"The data that need to check out whether they is a string.": {"ru":"Данные, которые нужно проверить на то являются ли они строкой."},
		"This variable will be true or false depending on whether the specified data is a string.":{"ru":"Эта переменная будет равна true или false в зависимости от того, являются ли указанные данные строкой."},
		"This action will return true or false depending on whether the specified data is a string. This result may be used with \"If\" action.": {"ru":"Данное действие вернет true или false в зависимости от того, являются ли указанные данные строкой. Результат может быть использован вместе с действием \"If\"."},
		"For example, if <code>\"Test text\"</code> is specified, then the action will return true, and if <code>123</code> or <code>true</code> is specified, then the action will return false.": {"ru":"Например, если указано <code>\"Тестовый текст\"</code>, то действие вернет true, а если укзано <code>123</code> или <code>true</code>, то действие вернет false."},
		
		"Not empty string.": {"ru":"Не пустая строка."},
		"Empty string or not string.": {"ru":"Пустая строка или не строка."},
		"Check if the specified data is not an empty string.": {"ru":"Проверить, являются ли указанные данные не пустой строкой."},
		"The data that need to check out whether they is not empty string.": {"ru":"Данные, которые нужно проверить на то являются ли они не пустой строкой."},		
		"This variable will be true or false depending on whether the specified data is not an empty string.":{"ru":"Эта переменная будет равна true или false в зависимости от того, являются ли указанные данные не пустой строкой."},
		"This action will return true or false depending on whether the specified data is not an empty string. This result may be used with \"If\" action.": {"ru":"Данное действие вернет true или false в зависимости от того, являются ли указанные данные не пустой строкой. Результат может быть использован вместе с действием \"If\"."},
		"For example, if <code>\"Test text\"</code> is specified, then the action will return true, and if <code>\"\"</code> or <code>123</code> is specified, then the action will return false.": {"ru":"Например, если указано <code>\"Тестовый текст\"</code>, то действие вернет true, а если укзано <code>\"\"</code> или <code>123</code>, то действие вернет false."},
		
		"Date": {"ru":"Дата"},
		"Number": {"ru":"Число"},
		"Object": {"ru":"Объект"},
		"Boolean": {"ru":"Булевый тип"},
		"Convert the specified data to a string.": {"ru":"Преобразовать указанные данные в строку."},
		"The data to be converted to a string.": {"ru":"Данные, которые нужно преобразовать в строку."},
		"This action works with any type of data.": {"ru":"Данное действие работает с любым типом данных."},
		"This action will return a string representation of the specified data.": {"ru":"Данное действие вернет строковое представление указанных данных."},
		"Variable in which, after successful execution of the action, the string representation of the specified data will be written.": {"ru":"Переменная в которую, после успешного выполнения действия, будет записано строковое представление указанных данных."},
		"For example, if <code>123</code> is specified, then the action will return <code>\"123\"</code>, and if <code>true</code> is specified, then the action will return <code>\"true\"</code>.": {"ru":"Например, если указано <code>123</code>, то действие вернет <code>\"123\"</code>, а если укзано <code>true</code>, то действие вернет <code>\"true\"</code>."},
		
		"Can be blank": {"ru":"Может быть пустым"},
		"Thousandth separator": {"ru":"Разделитель тысячных"},
		"Do not round the number": {"ru":"Не округлять число"},
		"Additional settings": {"ru":"Дополнительные настройки"},
		"Round to whole number": {"ru":"Округлить до целого числа"},
		"Decimal separator": {"ru":"Разделитель целой и дробной части"},
		"Number of decimal places": {"ru":"Количество знаков в дробной части"},
		"Separator between thousandths.": {"ru":"Разделитель между тысячными."},
		"The string to convert to a number.": {"ru":"Строка, которую нужно преобразовать в число."},
		"Convert the specified string to a number.": {"ru":"Преобразовать указанную строку в число."},
		"Separator between integer and decimal parts of a number.": {"ru":"Разделитель между целой и дробной частями числа."},
		"The number of decimal places to which the number will be rounded.": {"ru":"Количество знаков в дробной части, до которого будет округлено число."},
		"This action will return the numeric representation of the specified string.": {"ru":"Данное действие вернет числовое представление указанной строки."},
		"Variable in which, after successful execution of the action, the numeric representation of the specified string will be written.": {"ru":"Переменная в которую, после успешного выполнения действия, будет записано числовое представление указанной строки."},
		"The final number can be rounded off by specifying the \"Number of decimal places\" parameter located in the additional settings.": {"ru":"Итоговое число можно округлить, указав параметр \"Количество знаков в дробной части\", находящийся в дополнительных настройках."},
		"For example, if <code>\"123\"</code> is specified, then the action will return <code>123</code>, and if <code>\"123.45\"</code> is specified, then the action will return <code>123.45</code>.": {"ru":"Например, если указано <code>\"123\"</code>, то действие вернет <code>123</code>, а если укзано <code>\"123.45\"</code>, то действие вернет <code>123.45</code>."},
		"This action can convert numbers in a non-standard format for this, you need to specify the \"Decimal separator\" and \"Thousandth separator\" parameters located in the additional settings.": {"ru":"Данное действие может преобразовывать числа в нестандартном формате для этого нужно указать параметры \"Разделитель целой и дробной части\" и \"Разделитель тысячных\" находящиеся в дополнительных настройках."},
		"For example, the string <code>\"1 967 567.3245\"</code> will be converted to the number <code>1967567.3245</code> if a comma is specified in the \"Decimal separator\" parameter, and a space is specified in the \"Thousandth separator\" parameter.": {"ru":"Например, строка <code>\"1 967 567,3245\"</code> будет преобразована в число <code>1967567.3245</code>, если в параметре \"Разделитель целой и дробной части\" указана запятая, а в параметре \"Разделитель тысячных\" указан пробел."},
		
		"The number to format and convert to a string.": {"ru":"Число, которое нужно форматировать и преобразовать в строку."},
		"Format and convert the specified number to a string.": {"ru":"Форматировать и преобразовать в строку указанное число."},
		"This action will return the formatted string representation of the specified number.": {"ru":"Данное действие вернет форматированное строковое представление указанного числа."},
		"Before formatting, the number can be rounded by specifying the \"Number of decimal places\" parameter.": {"ru":"Перед форматирование число можно округлить, указав параметр \"Количество знаков в дробной части\"."},
		"This action can bring the number into a more readable form, for example, for further output to the log.": {"ru":"Данным действием можно привести число в более читабельный вид, например, для дальнейшего вывода в лог."},
		"Variable in which, after successful execution of the action, the formatted string representation of the specified number will be written.": {"ru":"Переменная в которую, после успешного выполнения действия, будет записано форматированное строковое представление указанного числа."},
		"For example, the number <code>1967567.3245</code> will be converted to the string <code>\"1 967 567.3245\"</code> if a comma is specified in the \"Decimal separator\" parameter, and a space is specified in the \"Thousandth separator\" parameter.": {"ru":"Например, число <code>1967567.3245</code> будет преобразована в строку <code>\"1 967 567,3245\"</code>, если в параметре \"Разделитель целой и дробной части\" указана запятая, а в параметре \"Разделитель тысячных\" указан пробел."},
		
		"sample": {"ru":"пример"},
		"Substring": {"ru":"Подстрока"},
		"The substring is missing from the string.": {"ru":"Подстрока отсутствует в строке."},
		"Contiguous sequence of characters within a string.": {"ru":"Непустая связная часть строки."},
		"Get the number of substrings in the string.": {"ru":"Получить количество подстрок в строке."},
		"The string from which to get the number of substrings.": {"ru":"Строка, из которой нужно получить количество подстрок."},
		"This action will return a number equal to the number of substrings in the string.": {"ru":"Данное действие вернет число, равное количеству подстрок в строке."},
		"Variable in which, after successful execution of the action, the number of substrings in the string will be written.": {"ru":"Переменная в которую, после успешного выполнения действия, будет записано количество подстрок в строке."},
		"For example, if the string <code>\"test text\"</code> is specified and the substring <code>\"te\"</code> is specified, then the action will return 2, and if the string is <code>\"Just example string\"</code> and the substring <code>\"example\"</code>, then the action will return 1.": {"ru":"Например, если указана строка <code>\"Тестовый текст\"</code> и подстрока <code>\"те\"</code>, то действие вернет 2, а если указана строка <code>\"Просто пример строки\"</code> и подстрока <code>\"пример\"</code>, то действие вернет 1."},
		
		"To index": {"ru":"До индекса"},
		"From index": {"ru":"С индекса"},
		"To the end of the string": {"ru":"До конца строки"},
		"To the first character": {"ru":"До первого символа"},
		"To the second character": {"ru":"До второго символа"},
		"From the first character": {"ru":"С первого символа"},
		"To the last character": {"ru":"До последнего символа"},
		"From the second character": {"ru":"С второго символа"},
		"From the last character": {"ru":"С последнего символа"},
		"From the beginning of the string": {"ru":"С начала строки"},
		"Get a substring from the string.": {"ru":"Получить подстроку из строки."},
		"The string from which to get the substring.": {"ru":"Строка, из которой нужно получить подстроку."},
		"This action will return the received substring.": {"ru":"Данное действие вернет полученную подстроку."},
		"If negative, indicates an offset from the end of the string.": {"ru":"Если отрицателен, то указывает смещение от конца строки."},
		"The index of the character at which to start getting the substring.": {"ru":"Индекс символа, с которого начинается получение подстроки."},
		"The index of the character at which the retrieval of the substring ends.": {"ru":"Индекс символа, которым заканчивается получение подстроки."},
		"Variable in which, after successful execution of the action, the substring will be written.": {"ru":"Переменная в которую, после успешного выполнения действия, будет записана подстрока."},
		"If the \"From index\" and \"To index\" parameters are not specified, the entire string will be received.": {"ru":"Если параметры \"С индекса\" и \"До индекса\" не указаны, будут получена вся строка."},
		"If the index is a negative number, then it is interpreted as the number of characters from the end of the string.": {"ru":"Если индекс отрицательное число, то он интерпретируется как количество символов с конца строки."},
		"If both parameters \"From Index\" and \"To Index\" are specified, all characters from specified to specified will be received.": {"ru":"Если оба параметра \"С индекса\" и \"До индекса\" указаны, будут получены все символы с указанного до указанного."},
		"If the \"From index\" parameter is not specified and the \"To index\" parameter is specified, all characters from the first to the specified one will be received.": {"ru":"Если параметр \"С индекса\" не указан, а параметр \"До индекса\" указан, будут получены все символы с первого до указанного."},
		"If the \"From index\" parameter is specified and the \"To index\" parameter is not specified, all characters from the specified to the end of the string will be received.": {"ru":"Если параметр \"С индекса\" указан, а параметр \"До индекса\" не указан, будут получены все символы с указанного до конца строки."},
		"For example, to get the substring <code>\"example\"</code> from the string <code>\"Just example string\"</code>, you need to specify 5 in the \"From index\" parameter and specify 12 in the \"To index\" parameter.": {"ru":"Например, чтобы получить из строки <code>\"Просто пример строки\"</code> подстроку <code>\"пример\"</code>, нужно в параметр \"С индекса\" указать 7, а в парамет \"До индекса\" указть 13."},
		
		"Left substring": {"ru":"Левая подстрока"},
		"Right substring": {"ru":"Правая подстрока"},
		"Get a substring between two substrings.": {"ru":"Получить подстроку между двумя подстроками."},
		"The substring to the left of the substring to get.": {"ru":"Подстрока находящаяся слева от подстроки которую нужно получить."},
		"The substring to the right of the substring to get.": {"ru":"Подстрока находящаяся справа от подстроки которую нужно получить."},
		"If the \"Left substring\" and \"Right substring\" parameters are not specified, the entire string will be received.": {"ru":"Если параметры \"Левая подстрока\" и \"Правая подстрока\" не указаны, будут получена вся строка."},
		"If both parameters \"Left substring\" and \"Right substring\" are specified, all characters from the specified substring to the specified substring will be received.": {"ru":"Если оба параметра \"Левая подстрока\" и \"Правая подстрока\" указаны, будут получены все символы от указанной подстроки до указанной подстрки."},
		"If the \"Left substring\" parameter is not specified and the \"Right substring\" parameter is specified, all characters from the first to the specified substring will be received.": {"ru":"Если параметр \"Левая подстрока\" не указан, а параметр \"Правая подстрока\" указан, будут получены все символы с первого до указанной подстрки."},
		"If the \"Left substring\" parameter is specified and the \"Right substring\" parameter is not specified, all characters from the specified substring to the end of the string will be received.": {"ru":"Если параметр \"Левая подстрока\" указан, а параметр \"Правая подстрока\" не указан, будут получены все символы от указанной подстроки до конца строки."},
		"For example, to get the substring <code>\"Text title\"</code> from the string <code>\"&lt;h1&gt;Text title&lt;/h1&gt;\"</code>, you need to specify <code>\"&lt;h1&gt;\"</code> in the \"Left substring\" parameter and specify <code>\"&lt;/h1&gt;\"</code> in the \"Right substring\" parameter.": {"ru":"Например, чтобы получить из строки <code>\"&lt;h1&gt;Заголовок текста&lt;/h1&gt;\"</code> подстроку <code>\"Заголовок текста\"</code>, нужно в параметр \"Левая подстрока\" указать <code>\"&lt;h1&gt;\"</code>, а в парамет \"Правая подстрока\" указть <code>\"&lt;/h1&gt;\"</code>."},
		
		"sample text": {"ru":"пример текста"},
		"Insertable substring": {"ru":"Вставляемая подстрока"},
		"Don't remove characters": {"ru":"Не удалять символы"},
		"Don't insert a substring": {"ru":"Не вставить подстроку"},
		"Number of characters to remove": {"ru":"Количество удаляемых символов"},
		"The number of characters to be removed.": {"ru":"Количество символов, которые будут удалены."},
		"Remove part of the string and/or insert a new one.": {"ru":"Удалите часть строки и/или вставьте новую."},
		"The character index at which to start modifying the string.": {"ru":"Индекс символа, с которого начинается изменение строки."},
		"The substring to be inserted instead of the removed part.": {"ru":"Подстрока, которая будет вставлена вместо удаленной части."},
		"The string from which want to remove a part and/or add a new one.": {"ru":"Строка, из которой нужно удалить часть и/или добавить новую."},
		"This action will return the string resulting from all the manipulations.": {"ru":"Данное действие вернет строку, полученную в итоге выполнения всех манипуляций."},
		"If you only need to insert a substring, then you can use the \"Insert at\" action.": {"ru":"Если вам нужно только вставить подстроку, то вы можете использовать действие \"Вставить в\"."},
		"Variable in which, after successful execution of the action, the final string will be written.": {"ru":"Переменная в которую, после успешного выполнения действия, будет записана итоговая строка."},
		"This action can either delete part of the string, or insert a new part, or all at the same time.": {"ru":"Данное действие может либо удалить часть строки, либо вставить новую часть, либо все одновременно."},
		"To insert only, you need to specify the \"Insertable substring\" parameter, and specify zero in the \"Number of characters to remove\" parameter.": {"ru":"Чтобы только вставить, нужно указать параметр \"Вставляемая подстрока\", а в параметр \"Количество удаляемых символов\" указать ноль."},
		"For example, if is specified the string <code>\"Test text\"</code>, index is 0 and the number of characters is 5, then the action will return <code>\"text\"</code>.": {"ru":"Например, если указана строка <code>\"Тест текст\"</code>, индекс 0 и количество символов 5, то действие вернет <code>\"текст\"</code>."},
		"To delete and insert, you need to specify a value greater than zero in the \"Number of characters to remove\" parameter, and specify the \"Insertable substring\" parameter.": {"ru":"Чтобы удалить и вставить, нужно указать в параметр \"Количество удаляемых символов\" значение больше нуля, и указать параметр \"Вставляемая подстрока\"."},
		"To only remove, you need to specify a value greater than zero in the \"Number of characters to remove\" parameter, and do not specify the \"Insertable substring\" parameter.": {"ru":"Чтобы только удалить, нужно указать в параметр \"Количество удаляемых символов\" значение больше нуля, а параметр \"Вставляемая подстрока\" не указывать."},
		"For example, if is specified the string <code>\"Test not text\"</code>, index 5, number of characters 3 and substring <code>\"new\"</code>, then the action will return <code>\"Test new text\"</code>.": {"ru":"Например, если указана строка <code>\"Тест не текст\"</code>, индекс 5, количество символов 2 и подстрока <code>\"новый\"</code>, то действие вернет <code>\"Тест новый текст\"</code>."},
		"For example, if is specified the string <code>\"Just string\"</code>, index 5, number of characters 0 and substring <code>\"example \"</code>, then the action will return <code>\"Just example string\"</code>.": {"ru":"Например, если указана строка <code>\"Просто строки\"</code>, индекс 7, количество символов 0 и подстрока <code>\"пример \"</code>, то действие вернет <code>\"Просто пример строки\"</code>."},
		
		"just sample text": {"ru":"просто пример текста"},
		"The string to be converted to lowercase.": {"ru":"Строка, которую нужно преобразовать в нижний регистр."},
		"Convert all letters of the string to lowercase.": {"ru":"Преобразовать все буквы строки в нижний регистр."},
		"Variable in which, after successful execution of the action, the converted string will be written.": {"ru":"Переменная в которую, после успешного выполнения действия, будет записана преобразованная строка."},
		"This action will return a string in which all letters will be uppercase, and the rest of the characters will remain unchanged.": {"ru":"Данное действие вернет строку, в которой все буквы будут иметь верхний регистр, а остальные символы останутся без изменений."},
		"If you need to convert the first letter to uppercase, and the rest to lowercase, then use the action \"Capitalize word\".": {"ru":"Если вам нужно преобразовать первую букву в верхний регистр, а остальные в нижний регистр, то используйте действие \"Слово с большой буквы\"."},
		"For example, the string <code>\"TEST\"</code> will be converted to the string <code>\"test\"</code>, and the string <code>\"Example String\"</code> will be converted to the string <code>\"example string\"</code>.": {"ru":"Например строка <code>\"ТЕСТ\"</code> будет преобразована в строку <code>\"тест\"</code>, а строка <code>\"Пример Строки\"</code> будет преобразована в строку <code>\"пример строки\"</code>."},
		
		"JUST SAMPLE TEXT": {"ru":"ПРОСТО ПРИМЕР ТЕКСТА"},
		"The string to be converted to uppercase.": {"ru":"Строка, которую нужно преобразовать в верхний регистр."},
		"Convert all letters of the string to uppercase.": {"ru":"Преобразовать все буквы строки в верхний регистр."},
		"This action will return a string in which all letters will be lowercase, and the rest of the characters will remain unchanged.": {"ru":"Данное действие вернет строку, в которой все буквы будут иметь нижний регистр, а остальные символы останутся без изменений."},
		"For example, the string <code>\"test\"</code> will be converted to the string <code>\"TEST\"</code>, and the string <code>\"example string\"</code> will be converted to the string <code>\"EXAMPLE STRING\"</code>.": {"ru":"Например строка <code>\"тест\"</code> будет преобразована в строку <code>\"ТЕСТ\"</code>, а строка <code>\"пример строки\"</code> будет преобразована в строку <code>\"ПРИМЕР СТРОКИ\"</code>."},
		
		"The string contains a substring.": {"ru":"Строка содержит подстроку."},
		"The string does not contain a substring.": {"ru":"Строка не содержит подстроку."},
		"Check if a string contains a substring.": {"ru":"Проверить, содержит ли строка подстроку."},
		"Substring, the contains of which is necessary to check.": {"ru":"Подстрока, содержание которой нужно проверить."},
		"The string in which to check the contains of the substring.": {"ru":"Строка, в которой нужно проверить содержание подстроки."},
		"This variable will be true or false depending on whether the string contains a substring.":{"ru":"Эта переменная будет равна true или false в зависимости от того, содержит ли строка подстроку."},
		"This action will return true or false depending on whether the string contains a substring. This result may be used with \"If\" action.": {"ru":"Данное действие вернет true или false в зависимости от того, содержит ли строка подстроку. Результат может быть использован вместе с действием \"If\"."},
		"For example, if the string is <code>\"Test text\"</code> and the substring <code>\"text\"</code>, then the action will return true, and if the string is <code>\"Just example string\"</code> and substring <code>\"test\"</code>, then the action will return false.": {"ru":"Например если указана строка <code>\"Тестовый текст\"</code> и подстрока <code>\"текст\"</code>, то действие вернет true, а если указана строка <code>\"Просто пример строки\"</code> и подстрока <code>\"тест\"</code>, то действие вернет false."},
		
		"Get the number of characters from a string.": {"ru":"Получить количество символов из строки."},
		"The string from which to get the number of characters.": {"ru":"Строка, из которой нужно получить количество символов."},
		"This action will return a number equal to the number of characters in the string.": {"ru":"Данное действие вернет число, равное количеству символов в строке."},
		"Variable in which, after successful execution of the action, the number of characters contained in the string will be written.": {"ru":"Переменная в которую, после успешного выполнения действия, будет записано количество символов, содержащихся в строке."},
		"For example, if the string <code>\"Test text\"</code> is specified, then the action will return 9, and if the string <code>\"Just example string\"</code> is specified, then the action will return 22.": {"ru":"Например, если указана строка <code>\"Тестовый текст\"</code>, то действие вернет 14, а если указана строка <code>\"Просто пример строки\"</code>, то действие вернет 20."},
		
		"Capitalize all words": {"ru":"Сделать все слова заглавными"},
		"All other letters in lowercase": {"ru":"Все остальные буквы в нижний регистр"},
		"The string in which to convert words.": {"ru":"Строка, в которой нужно преобразовать слова."},
		"Convert the first letter of a word to uppercase.": {"ru":"Преобразовать первую букву слова в верхний регистр."},
		"If the \"Capitalize all words\" parameter is enabled, the first letters in all words will be uppercase.": {"ru":"Если активирован параметр \"Сделать все слова заглавными\", то первые буквы во всех словах будут иметь верхний регистр."},
		"This action will return a string in which the first letter will be uppercase and the rest will remain unchanged.": {"ru":"Данное действие вернет строку, в которой первая буква будут иметь верхний регистр, а остальные останутся без изменений."},
		"If the \"All other letters in lowercase\" parameter is enabled, then all letters that were not converted to uppercase will be converted to lowercase.": {"ru":"Если активирован параметр \"Все остальные буквы в нижний регистр\", то все буквы, которые не были преобразованы в верхний регистр, будут преобразованы в нижний регистр."},
		"If both \"Capitalize all words\" and \"All other letters in lowercase\" are both enabled, the first letters in all words will be uppercase and all other lowercase.": {"ru":"Если активированы оба параметра \"Сделать все слова заглавными\" и \"Все остальные буквы в нижний регистр\", то первые буквы во всех словах будут иметь верхний регистр, а все остальные нижний регистр."},
		"For example, if the string <code>\"test text\"</code> is specified, then the action will return <code>\"Test text\"</code>, and if the string <code>\"just example string\"</code> is specified, then the action will return <code>\"Just example string\"</code>.": {"ru":"Например, если указана строка <code>\"тестовый текст\"</code>, то действие вернет <code>\"Тестовый текст\"</code>, а если указана строка <code>\"просто пример строки\"</code>, то действие вернет <code>\"Просто пример строки\"</code>."},
		"For example, if the string <code>\"test text\"</code> is specified, then the action will return <code>\"Test Text\"</code>, and if the string <code>\"just example string\"</code> is specified, then the action will return <code>\"Just Example String\"</code>.": {"ru":"Например, если указана строка <code>\"тестовый текст\"</code>, то действие вернет <code>\"Тестовый Текст\"</code>, а если указана строка <code>\"просто пример строки\"</code>, то действие вернет <code>\"Просто Пример Строки\"</code>."},
		"For example, if the string <code>\"TEST TEXT\"</code> is specified, then the action will return <code>\"Test text\"</code>, and if the string <code>\"JUST EXAMPLE STRING\"</code> is specified, then the action will return <code>\"Just example string\"</code>.": {"ru":"Например, если указана строка <code>\"ТЕСТОВЫЙ ТЕКСТ\"</code>, то действие вернет <code>\"Тестовый текст\"</code>, а если указана строка <code>\"ПРОСТО ПРИМЕР СТРОКИ\"</code>, то действие вернет <code>\"Просто пример строки\"</code>."},
		"For example, if the string <code>\"TEST TEXT\"</code> is specified, then the action will return <code>\"Test Text\"</code>, and if the string <code>\"JUST EXAMPLE STRING\"</code> is specified, then the action will return <code>\"Just Example String\"</code>.": {"ru":"Например, если указана строка <code>\"ТЕСТОВЫЙ ТЕКСТ\"</code>, то действие вернет <code>\"Тестовый Текст\"</code>, а если указана строка <code>\"ПРОСТО ПРИМЕР СТРОКИ\"</code>, то действие вернет <code>\"Просто Пример Строки\"</code>."},
		
		"The string does not contain the words": {"ru":"Строка не содержит слов"},
		"Get the number of words from a string.": {"ru":"Получить количество слов из строки."},
		"The string from which to get the word count.": {"ru":"Строка, из которой нужно получить количество слов."},
		"This action will return a number equal to the number of words in the string.": {"ru":"Данное действие вернет число, равное количеству слов в строке."},
		"Variable in which, after successful execution of the action, the number of words contained in the string will be written.": {"ru":"Переменная в которую, после успешного выполнения действия, будет записано количество слов, содержащихся в строке."},
		"For example, if the string <code>\"Test text\"</code> is specified, then the action will return 2, and if the string <code>\"Just example string\"</code> is specified, then the action will return 3.": {"ru":"Например, если указана строка <code>\"Тестовый текст\"</code>, то действие вернет 2, а если указана строка <code>\"Просто пример строки\"</code>, то действие вернет 3."},
		
		"Split a string into words.": {"ru":"Разделить строку на слова."},
		"[\"Just\", \"sample\", \"text\"]": {"ru":"[\"Просто\", \"пример\", \"текста\"]"},
		"The string containing a sentence to be split into words.": {"ru":"Строка, содержащая предложение, которое нужно разделить на слова."},
		"The list can be processed using actions from the \"List\" module.": {"ru":"Список можно обработать с помощью действий из модуля \"Список\"."},
		"This action will return a list containing the words obtained from the string.": {"ru":"Данное действие вернет список, содержащий слова, полученные из строки."},
		"Variable in which, after successful execution of the action, the list of words will be written.": {"ru":"Переменная в которую, после успешного выполнения действия, будет записан список слов."},
		"For example, if the string <code>\"Test text\"</code> is specified, then the action will return <code>[\"Test\",\"text\"]</code>, and if the string <code>\"Just example string.\"</code> is specified, then the action will return <code>[\"Just\",\"example\",\"string\"]</code>.": {"ru":"Например, если указана строка <code>\"Тестовый текст\"</code>, то действие вернет <code>[\"Тестовый\",\"текст\"]</code>, а если указана строка <code>\"Просто пример строки.\"</code>, то действие вернет <code>[\"Просто\",\"пример\",\"строки\"]</code>."},
		
		"Split the string into sentences.": {"ru":"Разделить строку на предложения."},
		"Just sample text. Test text, string": {"ru":"Просто пример текста. Тестовый текст, строка"},
		"[\"Just sample text.\", \"Test text, string\"]": {"ru":"[\"Просто пример текста.\", \"Тестовый текст, строка\"]"},
		"The string containing text to be split into sentences.": {"ru":"Строка, содержащая текст, который нужно разделить на предложения."},
		"Variable in which, after successful execution of the action, the list of sentences will be written.": {"ru":"Переменная в которую, после успешного выполнения действия, будет записан список предложений."},
		"For example, if the string <code>\"Just sample text. Test text, string\"</code> is specified, then the action will return <code>[\"Just sample text.\", \"Test text, string\"]</code>, and if the string <code>\"Test text! Test text! Test text!\"</code> is specified, then the action will return <code>[\"Test text!\", \"Test text!\", \"Test text!\"]</code>.": {"ru":"Например, если указана строка <code>\"Просто пример текста. Тестовый текст, строка\"</code>, то действие вернет <code>[\"Просто пример текста.\",\"Тестовый текст, строка\"]</code>, а если указана строка <code>\"Тестовый текст! Тестовый текст! Тестовый текст!\"</code>, то действие вернет <code>[\"Тестовый текст!\",\"Тестовый текст!\",\"Тестовый текст!\"]</code>."},
		
		"Find a substring in a string.": {"ru":"Найти подстроку в строке."},
		"The substring to find in the string.": {"ru":"Подстрока, которую нужно найти в строке."},
		"The string in which to find the substring.": {"ru":"Строка, в которой нужно найти подстроку."},
		"String does not contain the specified substring": {"ru":"Строка не содержит указанную подстроку"},
		"The character index at which to start the search.": {"ru":"Индекс символа, с которого следует начать поиск."},
		"Variable in which, after successful execution of the action, the index of the beginning of the substring will be written.": {"ru":"Переменная в которую, после успешного выполнения действия, будет записан индекс начала подстроки."},
		"This action will return a number equal to the index of the beginning of the first substring found, or -1 if the substring was not found.": {"ru":"Данное действие вернет число, равное индексу начала первой найденной подстроки, или -1, если подстрока не найдена."},
		"By default, the search is performed from the beginning of the string, but this can be changed by specifying the index from which to start the search in the \"From index\" parameter located in the additional settings.": {"ru":"По умолчанию поиск производится с начала строки, но это можно изменить, указав индекс, с которого следует начинать поиск, в параметр \"С индекса\", находящийся в дополнительных настройках."},
		"For example, if the string <code>\"Test text\"</code> is specified and the substring <code>\"text\"</code> is specified, then the action will return 5, and if the string is <code>\"Just example string\"</code> and the substring <code>\"test\"</code>, then the action will return -1.": {"ru":"Например, если указана строка <code>\"Тестовый текст\"</code> и подстрока <code>\"текст\"</code>, то действие вернет 9, а если указана строка <code>\"Просто пример строки\"</code> и подстрока <code>\"тест\"</code>, то действие вернет -1."},
		
		"The string to check.": {"ru":"Строка, которую нужно проверить."},
		"The string starts with a substring.": {"ru":"Строка начинается с подстроки."},
		"The string does not start with a substring.": {"ru":"Строка не начинается с подстроки."},
		"The substring that the string should start with.": {"ru":"Подстрока, с которой должна начинатся строка."},
		"Check if the string starts with the specified substring.": {"ru":"Проверить, начинается ли строка с указанной подстроки."},
		"This variable will be true or false depending on whether the string starts with the specified substring.":{"ru":"Эта переменная будет равна true или false в зависимости от того, начинается ли строка с указанной подстроки."},
		"This action will return true or false, depending on whether the string begins with the specified substring. This result may be used with \"If\" action.": {"ru":"Данное действие вернет true или false в зависимости от того, начинается ли строка с указанной подстроки. Результат может быть использован вместе с действием \"If\"."},
		"For example, if the string is <code>\"Test text\"</code> and the substring <code>\"Test\"</code>, then the action will return true, and if the string is <code>\"Just example string\"</code> and substring <code>\"example\"</code>, then the action will return false.": {"ru":"Например если указана строка <code>\"Тестовый текст\"</code> и подстрока <code>\"Тестовый\"</code>, то действие вернет true, а если указана строка <code>\"Просто пример строки\"</code> и подстрока <code>\"пример\"</code>, то действие вернет false."},
		
		"String length": {"ru":"Длина строки"},
		"The string ends with a substring.": {"ru":"Строка заканчивается подстрокой."},
		"The string does not end with a substring.": {"ru":"Строка не заканчивается подстрокой."},
		"The substring that the string must end with.": {"ru":"Подстрока, которой должна заканчиваться строка."},
		"Check if a string ends with a specified substring.": {"ru":"Проверить, заканчивается ли строка указанной подстрокой."},
		"The length to which the string will be truncated when searching for a substring allows searching within the string.": {"ru":"Длина, до которой будет обрезана строка при поиске подстроки,  позволяет искать внутри строки."},
		"This variable will be true or false depending on whether the string ends with the specified substring.":{"ru":"Эта переменная будет равна true или false в зависимости от того, заканчиваться ли строка указанной подстрокой."},
		"This action will return true or false depending on whether the string ends with the specified substring. This result may be used with \"If\" action.": {"ru":"Данное действие вернет true или false в зависимости от того, заканчиваться ли строка указанной подстрокой. Результат может быть использован вместе с действием \"If\"."},
		"By default, the search is performed from the end of the string, but this can be changed by specifying the index from which to start the search in the \"Length\" parameter located in the additional settings.": {"ru":"По умолчанию поиск производится с конца строки, но это можно изменить, указав индекс, с которого следует начинать поиск, в параметр \"Длина\", находящийся в дополнительных настройках."},
		"For example, if the string is <code>\"Test text\"</code> and the substring <code>\"text\"</code>, then the action will return true, and if the string is <code>\"Just example string\"</code> and substring <code>\"example\"</code>, then the action will return false.": {"ru":"Например если указана строка <code>\"Тестовый текст\"</code> и подстрока <code>\"текст\"</code>, то действие вернет true, а если указана строка <code>\"Просто пример строки\"</code> и подстрока <code>\"пример\"</code>, то действие вернет false."},
		
		"Just not sample text": {"ru":"Просто не пример текста"},
		"To the beginning of the string": {"ru":"В начало строки"},
		"After the first character": {"ru":"После первого символа"},
		"After the second character": {"ru":"После второго символа"},
		"After the last character": {"ru":"После последнего символа"},
		"The substring to insert.": {"ru":"Подстрока, которую нужно вставить."},
		"Insert a substring into a string.": {"ru":"Вставить подстроку в строку."},
		"The string to insert the substring into.": {"ru":"Строка, в которую нужно вставить подстроку."},
		"The character index after which the substring will be inserted.": {"ru":"Индекс символа, после которого будет вставлена подстрока."},
		"This action will return the string resulting from the substring insertion.": {"ru":"Данное действие вернет строку, полученную в итоге вставки подстроки."},
		"If you need to not only insert a substring, but also delete part of the original string, then use the \"Remove string part\" action.": {"ru":"Если вам нужно не только вставить подстроку, но и удалить часть исходной строки, то используйте действие \"Удалить часть строки\"."},
		"For example, if the string <code>\"Just string\"</code> is specified, the substring <code>\"example \"</code> and index 5, then the action will return <code>\"Just example string\"</code>.": {"ru":"Например, если указана строка <code>\"Просто строки\"</code>, подстрока <code>\"пример \"</code> и индекс 7, то действие вернет <code>\"Просто пример строки\"</code>."},
		
		"List of strings": {"ru":"Список строк"},
		"Concatenate strings without separator": {"ru":"Соединять строки без разделителя"},
		"Concatenate multiple strings into one.": {"ru":"Соединить несколько строк в одну."},
		"List of strings to be concatenated.": {"ru":"Список строк которые нужно соединить."},
		"The string to be concatenated with other strings.": {"ru":"Строка, которую нужно соединить с другими строкой."},
		"Separator to insert between the concatenated strings.": {"ru":"Разделитель, вставляемый между соединяемыми строками."},
		"The list can be created using actions from the \"List\" module.": {"ru":"Список можно создать с помощью действий из модуля \"Список\"."},
		"The parameters \"String 1\", \"String 2\", \"String 3\" will be used": {"ru":"Будут использованы параметры \"Строка 1\", \"Строка 2\", \"Строка 3\""},
		"This action will return a string composed of all the specified strings.": {"ru":"Данное действие вернет строку, составленную из всех указанных строк."},
		"The parameters \"String 2\", \"String 3\", \"List of strings\" will be used": {"ru":"Будут использованы параметры \"Строка 2\", \"Строка 3\", \"Список строк\""},
		"The parameters \"String 1\", \"String 3\", \"List of strings\" will be used": {"ru":"Будут использованы параметры \"Строка 1\", \"Строка 3\", \"Список строк\""},
		"The parameters \"String 1\", \"String 2\", \"List of strings\" will be used": {"ru":"Будут использованы параметры \"Строка 1\", \"Строка 2\", \"Список строк\""},
		"As a list, you can use a string consisting of strings, separated by commas.": {"ru":"В качестве списка можно использовать строку, состоящую из строк, разделенных запятыми."},
		"Strings from separate fields and a list are added to a general list of strings that will be concatenated.": {"ru":"Строки из отдельных полей и списка складываются в общий список строк которые будут соединены."},
		"The order of concating the fields is as follows \"String 1\", \"String 2\", \"String 3\", \"List of strings\".": {"ru":"Порядок соединения полей следующий: \"Строка 1\", \"Строка 2\", \"Строка 3\", \"Список строк\"."},
		"If some of the parameters (\"String 1\", \"String 2\", \"String 3\", \"List of strings\") are not specified, all parameters will be used except for them.": {"ru":"Если какие-то из параметров (\"Строка 1\", \"Строка 2\", \"Строка 3\", \"Список строк\") не указаны, будут использованы все параметры кроме них."},
		"For example, if a string is specified in the \"String 1\" field and a list of 4 strings is specified in the \"List of strings\" field, then 5 strings will be concatenated.": {"ru":"Например, если в поле \"Строка 1\" указана строка и в поле \"Список строк\" указан список из 4 строк, то соеденено будет 5 строк."},
		"By default, strings are concatenated without a separator, but this can be changed by specifying the \"Separator\" parameter located in the additional settings.": {"ru":"По умолчанию строки соединяются без разделителя, но это можно изменить, указав параметр \"Разделитель\", находящийся в дополнительных настройках."},
		"For example, if the parameters \"String 1\" and \"String 2\" are specified, the values of which are respectively <code>\"Just example\"</code> and <code>\" string\"</code>, then the action will return <code>\"Just example string\"</code>.": {"ru":"Например, если указаны параметры \"Строка 1\" и \"Строка 2\" значения которых сответственно равны <code>\"Просто пример\"</code> и <code>\" строки\"</code>, то действие вернет <code>\"Просто пример строки\"</code>."},
		"For example, if \"List of strings\" is not specified, then the list will be formed from the parameters \"String 1\" and \"String 2\" and \"String 3\". If the parameters \"String 1\", \"String 2\", \"String 3\" are empty, then the \"List of strings\" will be used. If all parameters are specified, then all of them will be used.": {"ru":"Например, если \"Список строк\" не указан, то список будет сформирован из параметров \"Строка 1\" и \"Строка 2\" и \"Строка 3\". Если параметры \"Строка 1\", \"Строка 2\", \"Строка 3\" пусты, то будет использован \"Список строк\". Если указаны все параметры, то все они будут использованы."},
		
		"Latinize Cyrillic": {"ru":"Латинизировать кириллицу"},
		"Convert all letters to Latin.": {"ru":"Преобразуйте все буквы в латиницу."},
		"The string to be latinized.": {"ru":"Строка, которую нужно латинизировать."},
		"This action will return a string in which all letters will be latinized, and the rest of the characters will remain unchanged.": {"ru":"Данное действие вернет строку, в которой все буквы будут латинизированы, а остальные символы останутся без изменений."},
		"By default, the Cyrillic is also latinized, but this can be changed by disabling the \"Latinize Cyrillic\" parameter located in the additional settings.": {"ru":"По умолчанию кириллица тоже латинизируется, но это можно изменить, отключив параметр \"Латинизировать кириллицу\", находящийся в дополнительных настройках."},
		"For example, the string <code>\"ỆᶍǍᶆṔƚÉ áéíóúýčďěňřšťžů\"</code> will be converted to the string <code>\"ExAmPlE aeiouycdenrstzu\"</code>, and the string <code>\"Привет мир!\"</code> will be converted to the string <code>\"Privet mir!\"</code>.": {"ru":"Например строка <code>\"ỆᶍǍᶆṔƚÉ áéíóúýčďěňřšťžů\"</code> будет преобразована в строку <code>\"ExAmPlE aeiouycdenrstzu\"</code>, а строка <code>\"Привет мир!\"</code> будет преобразована в строку <code>\"Privet mir!\"</code>."},
		
		"year": {"ru":"год"},
		"yeаrs": {"ru":"лет"},
		"years": {"ru":"года"},
		"at 10": {"ru":"при 10"},
		"at 21": {"ru":"при 21"},
		"at 22": {"ru":"при 22"},
		"minutеs": {"ru":"минут"},
		"minute": {"ru":"минута"},
		"minutes": {"ru":"минуты"},
		"account": {"ru":"аккаунт"},
		"Word at": {"ru":"Слово при"},
		"accounts": {"ru":"аккаунта"},
		"аccounts": {"ru":"аккаунтов"},
		"Word if number is": {"ru":"Слово, если число равно"},
		"Decline a word depending on the specified number.": {"ru":"Склонять слово в зависимости от указанного числа."},
		"The number by which the declension of the returned word will be determined.": {"ru":"Число, по которому будет определяется склонение возвращаемого слова."},
		"This action will return one of three words matching the declension to the specified number.": {"ru":"Данное действие вернет одно из трех слов, подходящее по склонению к указанному числу."},
		"Variable in which, after successful execution of the action, the word corresponding to the specified number will be written.": {"ru":"Переменная в которую, после успешного выполнения действия, будет записано слово, сответствующее указанному числу."},
		"For example, if the words \"account\", \"accounts\", \"accounts\" are specified and the number is 1, then the action will return <code>\"account\"</code>, and if the number is 22, then the action will return <code>\"accounts\"</code>.": {"ru":"Например, если указаны слова \"аккаунт\", \"аккаунта\", \"аккаунтов\" и число равно 5, то действие вернет <code>\"аккаунтов\"</code>, а если число равно 22, то действие вернет <code>\"аккаунта\"</code>."},
		
		"Convert types": {"ru":"Преобразовывать типы"},
		"List of separators": {"ru":"Список разделителей"},
		"Parse CSV string into items.": {"ru":"Распарсить CSV строку на элементы."},
		"CSV string with want to parse into items.": {"ru":"CSV строка, которую нужно распарсить на элементы."},
		"The list of delimiters by which the string can be split.": {"ru":"Список разделителей, по которым можно разбить строку."},
		"As a list, you can use a string consisting only of the separators.": {"ru":"В качестве списка можно использовать строку, состоящую только из разделителей."},
		"This action will parse the string by the specified separators and save the parsed data by the specified variables.": {"ru":"Данное действие распарсит строку по указанным разделителям и сохранит распарсенные данные по указанным переменным."},
		"If the number of variables is greater than the number of items in the string, then an empty string will be written to the excess variables.": {"ru":"Если количество переменных больше, чем количество элементов в строке, то в лишние переменные будет записана пустая строка."},
		"By default, the action returns strings, but this can be changed by enabling the \"Convert types\" parameter located in the additional settings, then strings will automatically be converted to numbers, true or false, objects, null and undefined.": {"ru":"По умолчанию действие возвращает строки, но это можно изменить, включив параметр \"Преобразовывать типы\", находящийся в дополнительных настройках, тогда страки автоматически будут конвертироватся в числа, true или false, обекты, null и undefined."},
		"For example, if the string <code>\"test:123:true\"</code> is specified, then the string <code>\"test\"</code> will be saved in the first variable, and the number <code>123</code> in the second variable and in the third variable the boolean value <code>true</code>.": {"ru":"Например, если указана строка <code>\"test:123:true\"</code>, то в первую переменную будет сохранена строка <code>\"test\"</code>, во вторую переменную число <code>123</code> и в третью переменную логическое значение <code>true</code>."},
		"For example, if the string <code>\"email@gmail.com:mypass1\"</code> and the variables <code>USERNAME,PASSWORD</code> are specified, then the action will save <code>\"email@gmail.com\"</code> to the variable <code>[[USERNAME]]</code> and <code>\"mypass1\"</code> to the variable <code>[[PASSWORD]]</code>.": {"ru":"Например, если указана строка <code>\"email@gmail.com:mypass1\"</code> и переменные <code>USERNAME,PASSWORD</code>, то действие сохранит <code>\"email@gmail.com\"</code> в переменную <code>[[USERNAME]]</code> и <code>\"mypass1\"</code> в переменную <code>[[PASSWORD]]</code>."},
		
		"Item": {"ru":"Элемент"},
		"List of items": {"ru":"Список элементов"},
		"The item to add to the CSV string.": {"ru":"Элемент, который нужно добавить в CSV строку."},
		"Create CSV string from multiple items.": {"ru":"Создать CSV строку из нескольких элементов."},
		"List of items to add to the CSV string.": {"ru":"Список элементов, которые нужно добавить  в CSV строку."},
		"Separator to insert between elements of CSV string.": {"ru":"Разделитель, вставляемый между элементами CSV строки."},
		"The parameters \"Item 1\", \"Item 2\", \"Item 3\" will be used": {"ru":"Будут использованы параметры \"Элемент 1\", \"Элемент 2\", \"Элемент 3\""},
		"If the element contains a separator, then it will be enclosed in quotes.": {"ru":"Если элемент содержит разделитель, то он будет заключен в кавычки."},
		"The values of all elements are converted to a string before concatenating.": {"ru":"Значения всех элементов перед соединением преобразуются в строку."},
		"The parameters \"Item 2\", \"Item 3\", \"List of items\" will be used": {"ru":"Будут использованы параметры \"Элемент 2\", \"Элемент 3\", \"Список элементов\""},
		"The parameters \"Item 1\", \"Item 3\", \"List of items\" will be used": {"ru":"Будут использованы параметры \"Элемент 1\", \"Элемент 3\", \"Список элементов\""},
		"The parameters \"Item 1\", \"Item 2\", \"List of items\" will be used": {"ru":"Будут использованы параметры \"Элемент 1\", \"Элемент 2\", \"Список элементов\""},
		"Variable in which, after successful execution of the action, the CSV string will be written.": {"ru":"Переменная в которую, после успешного выполнения действия, будет записана CSV строка."},
		"Items from separate fields and a list are added to a general list of items that will be concatenated.": {"ru":"Элементы из отдельных полей и списка складываются в общий список элементов которые будут соединены."},
		"The order of concating the fields is as follows \"Item 1\", \"Item 2\", \"Item 3\", \"List of items\".": {"ru":"Порядок соединения полей следующий: \"Элемент 1\", \"Элемент 2\", \"Элемент 3\", \"Список элементов\"."},
		"This action will return a CSV string composed of all the specified items, separated by the specified character.": {"ru":"Данное действие вернет CSV строку, составленную из всех указанных элементов, разделенных указанным символом."},
		"If some of the parameters (\"Item 1\", \"Item 2\", \"Item 3\", \"List of items\") are not specified, all parameters will be used except for them.": {"ru":"Если какие-то из параметров (\"Элемент 1\", \"Элемент 2\", \"Элемент 3\", \"Список элементов\") не указаны, будут использованы все параметры кроме них."},
		"For example, if a item is specified in the \"Item 1\" field and a list of 4 items is specified in the \"List of items\" field, then 5 items will be concatenated.": {"ru":"Например, если в поле \"Элемент 1\" указан элемент и в поле \"Список элементов\" указан список из 4 элементов, то соеденено будет 5 элементов."},
		"By default, strings are concatenated without a separator, but this can be changed by specifying the \"Separator\" parameter located in the additional settings.": {"ru":"По умолчанию строки соединяются без разделителя, но это можно изменить, указав параметр \"Разделитель\", находящийся в дополнительных настройках."},
		"For example, if the parameters \"Item 1\" and \"Item 2\" are specified, the values of which are respectively <code>\"test\"</code> and <code>\"text\"</code>, and the separator <code>\":\"</code>, then the action will return <code>\"test:text\"</code>.": {"ru":"Например, если указаны параметры \"Элемент 1\" и \"Элемент 2\" значения которых сответственно равны <code>\"тест\"</code> и <code>\"текст\"</code>, а разделитель <code>\":\"</code>, то действие вернет <code>\"тест:текст\"</code>."},
		"For example, if \"List of items\" is not specified, then the list will be formed from the parameters \"Item 1\" and \"Item 2\" and \"Item 3\". If the parameters \"Item 1\", \"Item 2\", \"Item 3\" are empty, then the \"List of items\" will be used. If all parameters are specified, then all of them will be used.": {"ru":"Например, если \"Список элементов\" не указан, то список будет сформирован из параметров \"Элемент 1\" и \"Элемент 2\" и \"Элемент 3\". Если параметры \"Элемент 1\", \"Элемент 2\", \"Элемент 3\" пусты, то будет использован \"Список элементов\". Если указаны все параметры, то все они будут использованы."},
		
		"Trim left": {"ru":"Обрезать слева"},
		"Trim right": {"ru":"Обрезать справа"},
		"Trim tabs": {"ru":"Обрезать табуляцию"},
		"Trim spaces": {"ru":"Обрезать пробелы"},
		"Trim characters": {"ru":"Обрезать символы"},
		"Trim line breaks": {"ru":"Обрезать переносы строк"},
		"Trim on both sides": {"ru":"Обрезать с обеих сторон"},
		"Trim string along the edges.": {"ru":"Подровнять строку по краям."},
		"The string which needs to be trimmed.": {"ru":"Строка, которую нужно подровнять."},
		"Characters to be trimmed at the edges of the string.": {"ru":"Символы, обрезаемые с краев строки."},
		"This action will return a string, from the beginning and end of which unnecessary characters such as spaces, line breaks, tabs will be trimmed.": {"ru":"Данное действие вернет строку, с начала и конца которой будут обрезаны ненужные символы, такие как пробелы, переносы строк, табуляция."},
		"By default, the action trim the string on both sides, but this can be changed using the radio buttons located in the additional settings.": {"ru":"По умолчанию действие обрезает строку с обеих сторон, но это можно изменить с помощью переключателей, находящихся в дополнительных настройках."},
		"The characters to be trimmed are determined by the \"Trim spaces\", \"Trim line breaks\", \"Trim tabs\" parameters, but you can also specify your own characters in the \"Trim characters\" parameter located in the additional settings.": {"ru":"Символы, которые будут обрезаны, определяются параметрами \"Обрезать пробелы\", \"Обрезать переносы строк\", \"Обрезать табуляцию\", но также можно указать свои символы в параметр \"Обрезать символы\", находящийся в дополнительных настройках."},
		"For example, if the string <code>\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Test text&nbsp;&nbsp;&nbsp;\"</code> is specified, then the action will return <code>\"Test text\"</code>, and if the string <code>\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Just example string&nbsp;&nbsp;&nbsp;&nbsp;\"</code> is specified, then the action will return <code>\"Just example string\"</code>.": {"ru":"Например, если указана строка <code>\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Тестовый текст&nbsp;&nbsp;&nbsp;\"</code>, то действие вернет <code>\"Тестовый текст\"</code>, а если указана строка <code>\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Просто пример строки&nbsp;&nbsp;&nbsp;&nbsp;\"</code>, то действие вернет <code>\"Просто пример строки\"</code>."},
		
		"Remove tabs": {"ru":"Удалять табуляцию"},
		"Remove characters": {"ru":"Удалять символы"},
		"Remove line breaks": {"ru":"Удалять переносы строк"},
		"Replace characters with space": {"ru":"Заменять символы на пробел"},
		"The string which needs to be cleaned.": {"ru":"Строка, которую нужно очистить."},
		"Characters which needs to be removed.": {"ru":"Символы, которые нужно удалять."},
		"Clean string from unnecessary characters.": {"ru":"Очистить строку от ненужных символов."},
		"Replace multiple spaces with single ones": {"ru":"Заменять многочисленные пробелы на одиночные"},
		"Characters which needs to be replaced with a space.": {"ru":"Символы, которые нужно заменить на пробел."},
		"Just&nbsp;&nbsp;&nbsp;&nbsp;sample&nbsp;&nbsp;text": {"ru":"Просто&nbsp;&nbsp;&nbsp;&nbsp;пример&nbsp;&nbsp;текста"},
		"This action will return a string from which all unnecessary characters will be removed, such as multiple spaces, line breaks, tabs.": {"ru":"Данное действие вернет строку, из которой будут удалены все ненужные символы, такие как множественные пробелы, переносы строк, табуляция."},
		"The characters to be removed are determined by the \"Remove line breaks\", \"Remove tabs\" parameters, but you can also specify your own characters in the \"Remove characters\" parameter located in the additional settings.": {"ru":"Символы, которые будут удалены, определяются параметрами \"Удалять переносы строк\", \"Удалять табуляцию\", но также можно указать свои символы в параметр \"Удалять символы\", находящийся в дополнительных настройках."},
		"In addition to replacing multiple spaces with single ones, activated by the corresponding parameter, in the \"Replace characters with space\" parameter located in the additional settings, you can specify your own characters that will be replaced by a space.": {"ru":"Кроме замены множественных пробелов на единичные, активируемой соответствующим параметром, можно указать свои символы, которые будут заменены пробелом, в параметр \"Заменять символы на пробел\", находящийся в дополнительных настройках."},
		"For example, if the string <code>\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Test&nbsp;&nbsp;&nbsp;text&nbsp;&nbsp;&nbsp;\"</code> is specified, then the action will return <code>\"Test text\"</code>, and if the string <code>\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Just&nbsp;&nbsp;example&nbsp;&nbsp;&nbsp;string&nbsp;&nbsp;&nbsp;&nbsp;\"</code> is specified, then the action will return <code>\"Just example string\"</code>.": {"ru":"Например, если указана строка <code>\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Тестовый&nbsp;&nbsp;&nbsp;текст&nbsp;&nbsp;&nbsp;\"</code>, то действие вернет <code>\"Тестовый текст\"</code>, а если указана строка <code>\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Просто&nbsp;&nbsp;пример&nbsp;&nbsp;&nbsp;строки&nbsp;&nbsp;&nbsp;&nbsp;\"</code>, то действие вернет <code>\"Просто пример строки\"</code>."}
    },
    "major_version": 1,
    "minor_version": 0,
    "modules": [],
    "name": "String"
}