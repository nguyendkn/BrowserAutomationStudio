<div class="container-fluid">
<%= _.template($('#input_constructor').html())({id:"query", description:tr("SQL query"), default_selector: "string", disable_int:true, disable_editor:true, disable_string:true, use_textarea:true, size: 8, disable_type_chooser:true,textarea_height:80, help: {description: tr("The query to be executed against the database."),examples:[{code:"INSERT INTO users (name, age) VALUES ('John', 25)", description:tr("Insert new record into \"users\" table, the \"name\" field is \"John\", the \"age\" field is 25")},{code:"<br/>INSERT INTO users (name, surname, age) VALUES ([[NAME]], [[SURNAME]], [[AGE]])", description:tr("Insert new record into \"users\" table, where field values are obtained from variables")},{code:"<br/>DELETE FROM users WHERE id = 10", description:tr("Delete records with id equal to 10 from \"users\" table")},{code:"<br/>DELETE FROM users WHERE age IS NULL", description:tr("Delete records in which \"age\" is an empty field from the table \"users\"")},{code:"<br/>SELECT * FROM users", description:tr("Select all records from \"users\" table")},{code:"<br/>SELECT * FROM users WHERE name = [[NAME]]", description:tr("Select all records from \"users\" table in which the \"name\" field is equal to the value from the [[NAME]] variable")}]} }) %>
<span data-preserve="true" data-preserve-type="check" data-preserve-id="Check">
	<input type="checkbox" id="Check" checked="checked"/> <label for="Check" class="tr">Parameterize variables and resources in the query.</label> <i class="fa fa-question-circle help-input trtitle" data-toggle="tooltip" title="Data from variables and resources will be escaped according to their type and used SQL dialect"></i>
</span>
<%= _.template($('#variable_constructor').html())({id:"Save", description:tr("Variable to save the result"), default_variable: "SQL_QUERY_RESULTS", help: {description: tr("Variable in which, after successful execution of the action, the results of the query will be written.") + " " + tr("If a SELECT query is executed, the format of the saved data depends on the \"Data format\" setting.")}}) %>
<%= _.template($('#input_constructor').html())({id:"data_format", description: tr("Data format"), default_selector: "string", variants:["CSV list<br/><span style='color:gray;font-size:small'>[\"1:test1:true\",\"2:test2:false\",\"3:test3:false\"]</span>","CSV string<br/><span style='color:gray;font-size:small'>1:tes1:true<br/>2:test2:false<br/>3:test3:false</span>","2D list<br/><span style='color:gray;font-size:small'>[[1,\"test1\",true],[2,\"test2\",false],[3,\"test3\",false]]</span>","Object list<br/><span style='color:gray;font-size:small'>[{\"id\":1,\"name\":\"test1\",\"active\":true},{\"id\":2,\"name\":\"test2\",\"active\":false},{\"id\":3,\"name\":\"test3\",\"active\":false}]</span>"], disable_int:true, value_string: "CSV list", help: {description: tr("The format in which the received data will be stored in a variable if a SELECT query is executed."),examples:[{code:"CSV list", description:"[\"1:test1:true\",\"2:test2:false\",\"3:test3:false\"]"},{code:"CSV string", description:"1:tes1:true<br/>2:test2:false<br/>3:test3:false"},{code:"2D list", description:"[[1,\"test1\",true],[2,\"test2\",false],[3,\"test3\",false]]"},{code:"Object list", description:"[{\"id\":1,\"name\":\"test1\",\"active\":true},{\"id\":2,\"name\":\"test2\",\"active\":false},{\"id\":3,\"name\":\"test3\",\"active\":false}]"}]} }) %>
</div>
<div class="tooltipinternal">
	<div class="tr tooltip-paragraph-first-fold">Execute an arbitrary query against an SQL database.</div>
	<div class="tr tooltip-paragraph-fold">In order to execute this action correctly you need to run "Setup connection" action first.</div>
	<div class="tooltip-paragraph-fold"><span class="tr">A query can have multiple lines, you can learn more about SQL in</span> <a href="#" class="tr" onclick="BrowserAutomationStudio_OpenUrl('https://www.w3schools.com/sql');return false">tutorial</a><span>.</span></div>
	<div class="tr tooltip-paragraph-fold">If the parameter "Parameterize variables and resources" is activated, then data from variables and resources will be escaped according to their type and used SQL dialect.</div>
	<div class="tr tooltip-paragraph-fold">For example, a string will be wrapped in quotes, the list will be converted to a string containing all the elements of the list, escaped and separated by commas.</div>
	<div class="tooltip-paragraph-fold"><span class="tr">Before parameterization:</span> <code>string</code>, <span class="tr">after parameterization:</span> <code>'string'</code></div>
	<div class="tooltip-paragraph-fold"><span class="tr">Before parameterization:</span> <code>[1,"test1",true]</code>, <span class="tr">after parameterization:</span> <code>1, 'test1', true</code></div>
	<div class="tr tooltip-paragraph-fold">For different dialects, the result of parameterization may differ.</div>
	<div class="tr tooltip-paragraph-fold">If a SELECT query is executed, the format of the saved data depends on the "Data format" setting.</div>
	<div class="tooltip-paragraph-fold"><span class="tr">CSV list - a list that consists of CSV lines and CSV line consists of field values separated with ":" symbol.</span> <span class="tr">Example:</span> <code>["1:test1:true","2:test2:false","3:test3:false"]</code></div>
	<div class="tooltip-paragraph-fold"><span class="tr">CSV string - this CSV lines separated by a line break, and consisting of field values separated with ":" symbol.</span> <span class="tr">Example:</span> <code><br/>1:tes1:true<br/>2:test2:false<br/>3:test3:false</code></div>
	<div class="tooltip-paragraph-fold"><span class="tr">2D list - a list that consists of lists containing the field values.</span> <span class="tr">Example:</span> <code>[[1,"test1",true],[2,"test2",false],[3,"test3",false]]</code></div>
	<div class="tr tooltip-paragraph-fold">Object list - a list that consists of objects, in the object the key is the name of the field, and the value is the content of the field.</div>
	<div class="tooltip-paragraph-fold"><span class="tr">Example:</span> <code>[{"id":1,"name":"test1","active":true},{"id":2,"name":"test2","active":false},{"id":3,"name":"test3","active":false}]</code></div>
	<div class="tr tooltip-paragraph-fold">CSV lines can be parsed using the "Parse Line" action from the "Tools" module.</div>
	<div class="tr tooltip-paragraph-fold">Lists can be processed using actions from the "List" module.</div>
	<div class="tr tooltip-paragraph-fold">Objects can be processed using actions from the "JSON" module.</div>
	<div class="tr tooltip-paragraph-last-fold">If an error occurred while execute action, the thread will stop with fail message. If you want to continue thread, use "Ignore errors" action.</div>
</div>
<%= _.template($('#back').html())({action:"executeandadd",use_timeout: true, visible:true}) %>
